{"version":3,"file":"main.js","sources":["../src/angular/page/page.js","../src/angular/page/controllers/_summary-data.js","../src/angular/page/services/http.js"],"names":["angular","module","controller","$scope","http","data","Params","dealer","Dealer","reference","Reference","u","User","post","success","console","log","factory","$http","handleError","error","status","headers","config","statusText","isJson","location","window","replace","reload","args","url","arguments","TokenID","sessionTokenID","dataType","method","Content-Type","withCredentials","result"],"mappings":"AAAAA,QAAQC,OAAO,UACX,oBACA,oBAIJD,QAAQC,OAAO;AAEfD,QAAQC,OAAO,sBCRfD,QAAQC,OAAO,oBAEdC,WAAW,iBAAgB,UAAU,cACtC,SAAUC,QAAQC;IAEhB,IAAIC;QACFC;YACEC,QAAUC;YACVC,WAAaC;YACbC,GAAKC;;;IAITR,KAAKS,KAAK,uDAAuDR,MAChES,QAAQ,SAAUT;QACjBU,QAAQC,IAAIX;;MCfhBL,QAAQC,OAAO,iBAEdgB,QAAQ,gBAAe,SAAS,SAAUC;IAyCzC,SAASC,YAAYC,OAAOC,QAAQC,SAASC,QAAQC;QAChD,IAAIC,SAAoC,qCAA3BH,QAAQ;QAQrB,IAP+B,mBAApB,mBACPG,UAAS,IAEC,OAAVJ,UAAkBI,WAClBJ,SAAS;QAGTA,UAAU,OAAiB,OAAVA,QAAe;YAChC,IAAIK,WAAWJ,QAAQ;YAMvB,OALgB,QAAZI,aACAA,WAAW,WAGfC,OAAOD,SAASE,QAAQF;;QAGT,OAAVL,UAA2B,OAAVA,UACtBN,QAAQC,IAAI,8BACZW,OAAOD,SAASG,YAED,OAAVR,SAEDN,QAAQC,IADRS,SACYL,QAGAI,cAGD,OAAVH,UACLN,QAAQC,IAAII,QAAQA,QAAQI;;IAvErC,IAAIpB;IA6EJ,OA3EAA,KAAKS,OAAO,SAAUiB;QACpB,IAAIC,MAAM,MACT1B,OAAO2B,UAAU;QAQlB,OAN4B,mBAAjBA,UAAU,OAAiBD,MAAMC,UAAU,KAC1B,mBAAjBA,UAAU,OACjBD,MAAMC,UAAU,GAAGD;QACnB1B,OAAO2B,UAAU,GAAG3B,OAGb,QAAP0B,OAC8B,mBAApB,mBACN1B,KAAK4B,UAAUC;QAEZhB;YACHa,KAAKA;YACLI,UAAU;YACVC,QAAQ;YACR/B,MAAMA;YACNiB;gBACIe,gBAAgB;;YAEpBC,kBAAiB;WAExBxB,QAAQ,SAAUyB,QAAQlB,QAAQC,SAASC;YACR,qCAA3BD,QAAQ,mBAAmF,mBAApB,kBACvEH,YAAYoB,QAAQlB,QAAQC,SAASC,QAAQ;WAGrDH,MAAM,SAAUA,OAAOC,QAAQC,SAASC,QAAQC;YAC5CL,YAAYC,OAAOC,QAAQC,SAASC,QAAQC;mBAI7CT,QAAQC,IAAI;OAyCXZ","sourcesContent":["angular.module('Page', [\n    'Page.controllers',\n    'Page.services'\n]);\n\n// Controllers module\nangular.module('Page.controllers', []);\n// Services module\nangular.module('Page.services', []);\n","angular.module('Page.controllers')\n\n.controller('SummaryData', ['$scope', 'Utils.http',\nfunction ($scope, http) {\n\n  var data = {\n    \"Params\": {\n      \"dealer\": Dealer,\n      \"reference\": Reference,\n      \"u\": User\n    }\n  };\n\n  http.post(\"https://api.devvideo1st.com/Video1st/GetSummaryData\", data)\n  .success(function (data) {\n    console.log(data);\n  });\n\n}]);\n","angular.module('Page.services')\n\n.factory('Utils.http', ['$http', function ($http) {\n  var http = {};\n\n  http.post = function (args) {\n    var url = null,\n    \tdata = arguments[1];\n\n    if (typeof arguments[0] === \"string\") url = arguments[0];\n    if (typeof arguments[0] === \"object\") {\n        url = arguments[0].url;\n        data = arguments[0].data;\n    }\n\n    if (url != null) {\n        if (typeof(sessionTokenID) == \"string\") {\n            data.TokenID = sessionTokenID;\n        }\n        return $http({\n            url: url,\n            dataType: \"json\",\n            method: \"POST\",\n            data: data,\n            headers: {\n                \"Content-Type\": \"text/plain\"\n            },\n            withCredentials: true\n        }).\n    \tsuccess(function (result, status, headers, config) {\n    \t    if (headers(\"Content-type\") != \"application/json; charset=utf-8\" && typeof (sessionTokenID) != \"string\") {\n    \t        handleError(result, status, headers, config, \"OK\");\n    \t    }\n    \t}).\n    \terror(function (error, status, headers, config, statusText) {\n    \t    handleError(error, status, headers, config, statusText);\n    \t});\n    }\n    else {\n        console.log(\"http.url can't be null\");\n    }\n  }\n\n  function handleError(error, status, headers, config, statusText) {\n       var isJson = headers(\"Content-type\") == \"application/json; charset=utf-8\";\n       if (typeof (sessionTokenID) == \"string\") {\n           isJson = true;\n       }\n       if (status == 200 && !isJson) {\n           status = 302;\n       }\n\n       if (status >= 300 && status <= 310) {\n           var location = headers(\"Location\");\n           if (location == null) {\n               location = \"/\";\n           }\n\n           window.location.replace(location);\n           return;\n       }\n       else if (status == 401 || status == 403) {\n           console.log('Your session has timeout.')\n           window.location.reload()\n       }\n       else if (status == 405) {\n           if (isJson) {\n               console.log(error);\n           }\n           else {\n               console.log(statusText);\n           }\n       }\n       else if (status != 406) {\n           console.log(error ? error : statusText);\n       }\n\n      //  Error.openModal();\n   }\n\n  return http;\n}]);\n"]}